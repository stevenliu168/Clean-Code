3.5.1	无单点故障（Remove Single Points of Failure）
	描述
单点故障会导致整个系统崩溃、主要功能受到影响、任务延误的系统轻度损坏或存在较大的故障隐患。
相似概念还有：
	消除单点故障（Eliminate single points of failure）
	避免单点故障（Avoid single points of failure）
	无单点故障（No Single Point of Failure）

	设计指导
无单点故障的主要手段是冗余，甚至是多级冗余的组合，包含异地容灾方式保证灾难情况下无单点：
1.	冗余机制：只要条件允许，需要考虑关键部分的元部件、单板、软件模块、设备或网络级的冗余，甚至是多级冗余的组合（例如：1+1冗余、n+1冗余、N-Way冗余等）。
2.	异地容灾：例如，两地三中心，保证灾难的情况也可以提供业务。
3.	数据冗余：可以通过定期备份和多副本备份等方式实现以提高数据持久度，并确保数据一致性。
3.5.2	避免共因故障（Avoid Common Cause Failure）
	描述
共因故障是由一个或者多个事件引起的故障，这个故障会导致一个多通道冗余系统中多个通道同时失效，并导致系统失效。

	设计指导
1.	冗余模块间：重点分析、规避冗余模块共因故障所导致的故障，冗余模块间必须保证相互独立，避免故障后相互影响，保护失去作用。
2.	容灾站点间：容灾站点之间相互隔离，无共因故障。
3.	云服务实例间：云服务实例之间需避免共因故障，软件通常使用异构版本共存实现多样化设计来避免共因故障。
3.5.3	故障预测预防（An Ounce of Prevention）
	描述
故障预测预防，应该是指在系统发生故障之前，通过AI或机器学习的方法，提前发现问题，并采取措施预防故障发生。

	设计指导
1.	故障预测主要基于亚健康症状预测系统故障，基于系统状态从正常到事故的生命周期，故障预测预防设计可分为可用性管理、早期故障发现（异常检测/劣化趋势预测）、故障分析（诊断/问题分类）、 故障自愈等
2.	故障预测预防可以考虑如下方法：
	机理模型：基于故障机理模型的故障预测，被预测对象系统的数学模型已知，可以用来评估部件剩余寿命等。
	数据驱动：基于数据驱动的故障预测，包含统计分析方法和机器学习方法。
	混合技术：采用混合上述方法的故障预测。

3.5.4	升级不中断业务（Non-interrupt when upgraded）
	描述
关注最终客户的感受，升级期间业务数据中断时间用户无感知。已经建立的业务连接不中断，新业务能够按照业务不中断的时间接入。

	设计指导
1.	升级场景包括：软件升级、硬件升级。
2.	升级不中断业务设计和系统冗余架构强相关，通常直接利用系统现有冗余架构，将系统划分为主备版本双平面，主备版本双平面分别运行新老版本软件，并根据不同的业务接入处理机制（主备倒换或负荷分担），实现升级不中断业务特性。
3.	系统分析关键点：
	系统划分为业务相关平面和业务无关平面，业务相关平面划分为主备版本双平面。
	软件升级管理模块实现主备版本双平面标识、分离、版本更新、切换以及升级后的主备双平面合并等功能。
	数据转换模块实现新老版本数据兼容性转换功能。
	版本通讯模块实现新老版本消息兼容性转换功能。
	硬件单板需支持热拔插。
	接口兼容性设计，避免联动升级，新版本硬件单板需兼容老版本接口，支持硬件降级使用。新版本软件需支持老版本接口，避免周边网元或网管联动升级。
3.5.5	配置防差错（Mistake-proofing）
	描述
配置防差错（防呆）是针对配置过程中因人输入了错误的配置数据导致系统和业务受损或失效场景下通过产品设计降低或避免配置错误产生的影响。

防呆：是一种预防矫正的行为约束手段，运用防止错误发生的限制方法，让操作者不需要花费注意力、也不需要经验与专业知识，凭借直觉即可准确无误地完成的操作。

	设计指导
1.	角色约束：通过权限控制设计预防对不同角色的配置范围进行约束，避免越权配置导致错误。
2.	查改分离：通过产品界面设计将配置界面分层分级，查看与修改分离等降低人为配置失误风险。
3.	配置校验：通过配置生效机制设计确保在配置生效前进行必要的校验，避免错误配置生效。
4.	备份恢复：通过配置数据事前备份与恢复设计确保在出现配置错误时能够快速恢复到正确的配置数据状态。
3.5.6	故障全面快速检测（Failure Detection Extensively and Fast）
	描述
故障检测是故障管理的前提，检测全与检测快都很重要，通常情况下故障检测全比故障检测快重要。

	设计指导
1.	检测范围：识别并跟踪检测所有组件、服务、设备等，对于硬件失效概率高（4fit及以上）、失效影响大（严酷度III级及以上）的失效模式需要重点检测，有重大影响的软件故障模式也需要重点检测。
2.	亚健康检测：对不引起系统故障却导致系统或服务KPI下降的亚健康异常（产品定义）需要能检测，如网络时延变大、磁盘变慢、内存泄漏等亚健康故障。
3.	备用检测：冗余系统中，主备用模块的故障都需要检测，避免静默故障。
4.	有特殊寿命器件：应及时监控有特殊寿命（如Flash有擦写次数限制等）要求的器件健康状态，通过提前预警采取维护措施，避免故障的突然发生造成严重影响。
5.	检测速度：需要根据业务综合要求，确定合适的检测速度。
6.	检测影响：故障定时检测的周期，需综合考虑对CPU占用率的影响和检测延迟对业务恢复速度的影响。
7.	检测模块要简单：故障检测系统、模块要比被检测系统、模块简单。
3.5.7	控制失效影响范围（Contain  failure radius）
	描述
故障隔离技术的核心思想是控制失效影响范围，防止产生级联故障。

	设计指导
控制失效范围可以通过以下方面考虑：
	多平面：系统考虑多平面设计，减小影响范围。
	多粒度：支持不同粒度的故障隔离域，合理设计故障隔离影响范围。
	隔离单位：故障隔离域通常是单个FMU、单个FRU、单个虚拟机、单个容器、单个接口（包括服务、服务实例等）。
3.5.8	优雅降级设计（graceful degradation）
	描述
在电脑、机器、电子系统或者是网络在本身大部分已经毁坏或无效的情况下还能保持有限的功能。

	设计指导
在系统过载时通过减少非核心业务或者降低业务质量等措施降低系统负载：
	非核心业务降级：系统过载，减少非核心业务，使核心业务功能可以良好运行。
	核心功能放通：非核心业务模块异常过载，放通核心业务，持续提供业务。
	体验降级：系统限制，不能完整提供核心业务，对核心业务质量进行降级，保证业务可用性，例如：网络异常，把提供图片的服务降级成提供文字服务。
3.5.9	不要假设系统容量（Stop guessing capacity）
	描述
当对系统的要求超过该系统的容量时（这通常是拒绝服务攻击的目标），本地系统失败的常见原因是资源饱和。 在云中，您可以监控需求和系统利用率，并自动添加或删除资源，以维持最佳级别来满足业务需求，而无需过度配置或配置不足。

	设计指导
控制业务流量一般通过动态资源管理来实现，不建议简单的使用静态门限来达到防过载的目的，有可能造成资源大量浪费，过载设计应该考虑以下方面：
	动态限流：根据系统资源消耗情况动态调整流控门限。
	弹性扩缩容：云环境中，自动检测系统资源利用率，自动进行添加或删除资源。
	先负载均衡后流控：多个并行处理单元场景下，优先考虑负载均衡，避免单个处理单元资源受限导致业务受损；然后进行过载控制保护，使得整个系统的处理能力最大化。 
	及早控制：系统过载时，应尽可能在业务流程处理前端或业务处理较早的处理模块（网元/单板/芯片等）或底层协议层次上控制业务接入，避免中间控制带来不必要的性能消耗。
	优先级保障：系统过载时保证高优先级的业务能够优先获得资源，优先得到处理，从而保证社会效益最大化。
3.5.10	故障快速恢复（Recover Fast）
	描述
故障恢复指恢复产品执行规定功能的能力，一般情况下恢复越快影响越小。

	设计指导
结合业务情况，综合考虑技术实现难度、技术方案复杂度、成本等设计合适的故障恢复方案：
	自动恢复：对于影响业务的故障，系统应尽可能自动恢复自愈，如保护倒换、局部复位或系统复位等。
	优先恢复：优先对故障发生概率高、故障影响大的故障进行恢复。
	分级复位：提供分级复位设计，尽可能在更小级别进行复位，以减少对业务的影响。
	无耦合恢复：尽可能做到系统局部故障或各部件启动顺序不影响系统成功启动。
	分层保护：系统故障保护要考虑网络分层，下层的故障保护倒换要比上层灵敏，防止系统出现乒乓倒换（如SDH环要做到50ms检测和倒换，IP网络做到秒级检测和倒换，业务层做到几秒~十几秒级的检测和倒换）。
