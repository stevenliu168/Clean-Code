2.3.1	聚焦公共关键资产（Focus on common critical assets）原则
	描述
多个mission共有的、或者是对mission达成产生关键作用的资产，需要被识别为关键资产。关键资产的受损会增加攻击者横向移动或持久性攻击的风险，因此关键资产是网络攻击者的潜在高价值目标。此外，关注关键资产也是应急计划、运营计划连续性、运营韧性以及Safety安全分析的核心。

	设计指导
1.	进行安全韧性设计时，应对资产进行识别，对资产进行安全韧性威胁分析，并对威胁可能导致的风险进行评估。产品根据风险处置策略，设计处置措施来消减这些风险。
2.	如果某个资产同时支撑多个mission的达成，则这个资产被攻陷后，将会引起多个mission无法达成，从而严重影响系统韧性目标的达成，因此应则针对这个资产落实更高强度的处置措施。同时，针对这类资产的保护，可更高效的提升系统的韧性能力水平。因此这类资产是安全韧性设计应该重点关注的资产。

备注：
在产品定义对产品的韧性进行黑盒分析时，无需展开系统进行白盒分析，因此可按原则的表述识别黑盒关键资产，此时关注Mission对客户价值的影响，可参考以下的方法：
技术方法	方法描述
Mission影响分析（MIA, Mission Impact Analysis）	评估使用包含相同DIMFUI（Degradation, Interruption, Modification, Fabrication, Unauthorized Use, and Interception）属性集的ICT资源的mission活动的mission影响。
业务影响分析（BIA, Business Impact Analysis）	确定业务活动和相关资源需求的关键性的过程，以确保业务中断前后期间的业务运营韧性和业务连续性。
关键资产分析（CJA, Crown Jewels Analysis）	是一个识别实现组织mission最关键的网络资产的过程。它是基于mission的关键信息技术资产识别的非正式名称，是识别所有类型的关键mission资产的更广泛分析的一个子集。



2.3.2	支持敏捷性和适应性架构（Support agility and architect for adaptability）原则
	描述
威胁不仅随着攻击者的演进而变化，而且随着个人和组织选用的技术和方法的不同而变化。在系统整个寿命期（指系统投入现场使用的预期时长）内，风险框架假设威胁、技术和操作环境都会发生不可预料的变化，作为对此的响应，敏捷性和适应性都需要作为风险管理策略的一部分。
•	敏捷性，在韧性工程中意味着在mission中对机会和问题的有效响应。敏捷性是基础设施或系统的属性，指这些系统可配置，系统资源可重新分配，系统组件可以重复使用或改变目的，从而网络防护者可以针对各类破坏或恶意网络活动，定义、选择和定制应对网络行动方案。敏捷性使系统和操作过程能够整合新技术，并适应不断变化的攻击者能力。
•	适应性，是指能够适应威胁模型、mission或业务功能、技术和系统变化而不产生重大影响的架构、设计和实现的属性。

在系统生命周期早期应用此设计原则可以减少后期维护成本和定制化工作。


	设计指导：
1.	设计适应操作环境及威胁环境不断变化的系统机制，比如支持安全配置的变更，支持调整访问控制策略，支持组件/服务实例的增删，支持路由的调整等等。
2.	系统根据攻击者演进而做出适应性变化的方式，包括人工配置和自动化响应。
3.	对于自动化响应，需要系统构建包含安全数据采集、安全数据分析、安全调度编排在内的适应性框架。并且系统架构需要支持此适应性框架的运作，比如：通过状态外置支持组件/服务实例的动态增删，实施自适应认证技术（根据网络安全环境风险情况不同，动态调整安全验证的强度），支持动态配置生效而不重启系统，支持补丁升级而不中断业务的批次升级调度等。

2.3.3	减少攻击面（Reduce attack surfaces）原则
	描述
攻击面是指系统（包括硬件、软件和固件等）可被攻击者访问并利用的弱点、缺陷或漏洞，它存在于任何可能使系统暴露于潜在威胁访问的硬件、软件、连接、数据交换、服务或可移动介质上。攻击面也包含攻击者可以触及的可能包含漏洞的开发、运行和维护环境，广义上还包括了组织中的人员、组织系统的外部用户、业务运营和ICT技术供应链。
根据系统漏洞的暴露位置，分为外部攻击面和内部攻击面，这两种攻击面都需要实施安全策略控制。
减少攻击面，系统被攻击的路径就会减少，系统的安全性会相应提高。在系统韧性架构设计过程中，可以采用相应的安全控制策略减少攻击面，从而提升系统的安全性，基于攻击面的暴露范围和攻击面的暴露时间，来选择合适的安全控制策略和网络韧性技术。
减少攻击面也会降低构建和维护系统安全韧性保护能力的成本，可让安全韧性机制的构建集中在更少的对象上。 

	设计指导
1.	减少攻击面的暴露范围：这里的范围也可以理解为攻击面的数量。
2.	可基于最小化功能性、最小化权限的安全控制策略，仅提供基本必要的能力，禁止和限制系统功能、端口、协议或服务的使用。例如：禁用系统中的非关键功能，有选择地隔离或禁用进出核心模块的数据流，弃用不安全的功能，实施组件隔离等。
3.	替换不安全的攻击面：减少未经授权的用户访问点，消除容易遭受网络攻击的应用程序接口。例如：接口普遍实施授权访问，采用HTTPS来代替HTTP。
4.	减少攻击面暴露的时间：采用非持久性策略可以显著降低攻击者发起并完成网络攻击的能力，从而缓解高级持续威胁（APT）带来的风险。该安全策略将会增加攻击者损坏或破坏系统的难度。非持久性的系统组件和服务可以根据需要在使用时被激活，定期或会话结束时被终止。例如，只有在特定的情况下来打开wifi接入服务，模块/服务间通信按需建立连接并在不再需要时终止连接等。

2.3.4	假设资源受损（Assume compromised resources）原则
	描述
系统及其组件（包括芯片、软件模块及运行服务）可能会长时间受到损害而没有或无法被检测到，这些受损的系统或组件在组织环境中不再安全可信，其可靠性、隐私保护能力以及所属的系统或环境的安全性无法得到保证，并且攻击者还可能利用这些受损的系统或组件资源作为跳板攻击其他资源。
因此，应遵循假设资源受损原则，分析系统架构在部分组件已不被信任的前提下，如何避免对关键Mission的进一步影响，如何限制恶意软件的传播范围或降低传播速度，或者如何从服务中断中恢复系统并避免再次被侵入等等，从而提升产品的韧性能力水平。

	设计指导
1.	对系统中的组件/服务，需要充分识别与其存在关系的周边模块、运行环境、依赖资源（包括芯片、服务等），并考虑他们的失效、受损或被入侵等不利情况而建立威胁模型。比如：某服务和其它服务部署在同一个操作系统中，则需要建立其它服务抢占内存资源的威胁模型。
2.	针对上述威胁模型，结合安全韧性目标，思考可用的安全韧性技术措施。这些技术措施应覆盖“降低攻击成功可能性”、“限制不利情况发生时的损害”、“不利情况下维持核心业务”、“不利情况发生后恢复业务”等各个维度，从而构建其全面的安全韧性保护能力。
对上述威胁模型进行风险评估，分析不利事件发生的可能性，以及对Mission达成的系统性影响，得到其风险等级，并根据风险消减策略确定如何消减此风险，从而对各种安全韧性技术措施进行权衡。

2.3.5	预期攻击者演进（Expect adversaries to evolve）原则
	描述
高级的网络攻击者会投入时间和精力以及情报收集来不断改进现有的和开发新的TTPs（战术、技术、程序）。攻击者会根据新技术或技术应用提供的机会，以及他们获得的有关防御者TTPs应对策略的知识而不断发展演进，同时在较短的时间内，高级攻击者开发的工具也会为经验欠佳的攻击者所用。因此，系统和mission需要在面对不可预期的攻击时具有韧性。
考虑到攻击者TTPs不断演进的情景，在进行架构设计时，不仅要了解和获取修复漏洞的常规方法，在系统修复已知漏洞之后，还需要考虑面对不断演进的攻击者的持续进攻时的风险管理策略。

	设计指导
1.	在组织内部选择具备网络攻击知识的人员，以攻击者的视角进行TTPs分析来支撑韧性架构设计。该分析可以借助已有的威胁情报和攻击模式库（例如ATT&CK和CAPEC），但并不限于这些知识库。
2.	分析攻击者行为时，还可以使用各种网络攻击相关的模型、分类法和语言，比如：NTCTF的网络攻击生命周期模型、杀伤链（kill-chain）模型。

3.	实施欺骗和多样性技术：此类技术的应用可以较早地暴露攻击者采用的TTPs，使得防御者能够制定对策或防御性TTPs。常用的此类欺骗和多样性技术包括：蜜罐（HoneyPot）、蜜网（HoneyNet）、蜜信（HoneyToken）、移动目标防御（MTD）、网络空间拟态防御技术（CMD）等。
备注：
	CAPEC:常见攻击模式的列举和分类 https://capec.mitre.org/index.html
	ATT&CK:对抗战术、技术和常识https://attack.mitre.org/
